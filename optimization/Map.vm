function Map.new 2
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop static 0
push argument 1
pop static 1
push argument 2
pop static 2
push argument 3
pop static 3
push constant 3
pop static 4
push static 0
push static 1
call Math.multiply 2
call Memory.alloc 1
pop this 0
push constant 0
pop local 0
label L4
push local 0
push static 0
lt
not
if-goto L5
push constant 0
pop local 1
label L6
push local 1
push static 1
lt
not
if-goto L7
push local 0
push static 1
call Math.multiply 2
push local 1
add
push this 0
add
push local 0
push local 1
call Cell.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto L6
label L7
push local 0
push constant 1
add
pop local 0
goto L4
label L5
push pointer 0
return
function Map.dispose 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label L8
push local 0
push static 0
lt
not
if-goto L9
push constant 0
pop local 1
label L10
push local 1
push static 1
lt
not
if-goto L11
push local 1
push local 0
push static 1
call Math.multiply 2
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push constant 0
push constant 0
eq
not
not
if-goto L12
push constant 0
pop temp 0
goto L13
label L12
label L13
goto L10
label L11
goto L8
label L9
